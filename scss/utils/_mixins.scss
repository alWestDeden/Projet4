//breakpoint
@mixin desktop {
    @media screen and (min-width: map-get($breakpoints, desktop)) {
        @content;
    }
}

@mixin tablette {
    @media screen and (min-width: map-get($breakpoints, tablette)) {
        @content;
    }
}

@mixin no-hover {
    @media (hover: none) {
        @content;
    }
}

// define the height, width and radius corner of element background
@mixin bg-style($bg-height,$bg-width,$bg-radius) {
    height: $bg-height+px;
    width: $bg-width+px;
    border-radius: $bg-radius+px;
}

// define the gradient background
@mixin bg-gradient {
    background: $light;
}

@mixin btt-gradient-anime {
    background: linear-gradient(167deg, #FF79DA -11.44%, #9356DC 123.93%);
    position: relative;
    z-index: 1;

    &::before {
        background: linear-gradient(0deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.15));
        content: "";
        position: absolute;
        height: 100%;
        width: 100%;
        top: 0;
        left:0;
        opacity: 0;
        transition: opacity 250ms;
        z-index: -1;
    }

    &:hover {
        &::before {
            opacity: 1;
        }
    }
}

// define the shadow
@mixin shadow($Y,$B,$OPA) {
    position: relative;
    box-shadow: 0px $Y+px $B+px rgba(0, 0, 0, calc($OPA / 100));
}

// center elements
@mixin centered {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

// define the font style
@mixin robot($robot-weight,$robot-size,$txt-color) {
    font-family: 'Roboto', sans-serif;
    font-weight: $robot-weight*100;
    font-size: calc($robot-size / 16)+rem;
    color: $txt-color;
}

@mixin shrik($shrik-size,$txt-color) {
    font-family: 'Shrikhand';
    font-size: calc($shrik-size / 16)+rem;
    color: $txt-color;
}